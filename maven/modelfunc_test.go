package maven

import (
	"fmt"
	"testing"
)

func TestX(t *testing.T) {
	pom := CreateProject()
	pom.Parent = &Parent{
		Coordinates: Coordinates{
			GroupID:    "tech.f3s",
			ArtifactID: "parent",
			Version:    "999",
		},
	}
	pom.GroupID = "tech.f3s"
	pom.ArtifactID = "market-model"
	pom.Version = "1.0.0-SNAPSHOT"
	pom.Packaging = "pom"
	pom.Name = "f3s test project"
	pom.Description = "Super cool maven project generated by go!"
	pom.Url = "https://www.f3s.tech"
	pom.InceptionYear = "2022"
	pom.Dependencies = &Dependencies{
		Elements: []Dependency{
			{
				Coordinates: Coordinates{
					GroupID:    "tech.f3s",
					ArtifactID: "lib-a",
					Version:    "1.0",
				},
			},
		},
	}
	pom.DependencyManagement = &DependencyManagement{
		Dependencies: &Dependencies{
			Elements: []Dependency{
				{
					Coordinates: Coordinates{
						GroupID:    "tech.f3s",
						ArtifactID: "lib-a",
						Version:    "1.0",
					},
				},
			},
		},
	}

	pom.Build = &Build{
		Directory:             "c:/dir",
		OutputDirectory:       "c:/dir",
		FinalName:             "final-name",
		TestOutputDirectory:   "c:/dir",
		SourceDirectory:       "c:/dir",
		ScriptSourceDirectory: "c:/temp",
		TestSourceDirectory:   "c:/",
		Resources: &Resources{
			Elements: []Resource{
				{
					TargetPath: "target-path-1",
					Filtering:  "filtering-1",
					Directory:  "dir-1",
					Includes: &Includes{
						Elements: []string{"include-1", "include-2"},
					},
				},
				{
					TargetPath: "target-path-2",
					Filtering:  "filtering-2",
					Directory:  "dir-2",
					Includes: &Includes{
						Elements: []string{"include-1", "include-2"},
					},
					Excludes: &Excludes{
						Elements: []string{"exclude-1", "exclude-2"},
					},
				},
			},
		},
		TestResources: &TestResources{
			Elements: []Resource{
				{
					TargetPath: "target-path-1",
					Filtering:  "filtering-1",
					Directory:  "dir-1",
					Includes: &Includes{
						Elements: []string{"include-1", "include-2"},
					},
				},
				{
					TargetPath: "target-path-2",
					Filtering:  "filtering-2",
					Directory:  "dir-2",
					Includes: &Includes{
						Elements: []string{"include-1", "include-2"},
					},
					Excludes: &Excludes{
						Elements: []string{"exclude-1", "exclude-2"},
					},
				},
			},
		},
		PluginManagement: &PluginManagement{
			Plugins: &Plugins{
				[]Plugin{
					{
						Coordinates: Coordinates{
							GroupID:    "g",
							ArtifactID: "a",
							Version:    "v",
						},
						Extensions: true,
					},
				},
			},
		},
	}

	properties := make(map[string]string)
	properties["p1"] = "value-1"
	properties["p2"] = "value-2"
	properties["p3"] = "value-3"

	pom.Properties = &Properties{
		Entries: properties,
	}
	pom.Modules = &Modules{
		Elements: []string{"a", "b", "c"},
	}

	if data, err := pom.MarshalIndent("", "  "); err != nil {
		t.Error(err)
	} else {
		fmt.Println(string(data))
	}
}
